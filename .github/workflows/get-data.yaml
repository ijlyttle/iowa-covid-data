# This action is a blending of actions that:
#
#  - build and check an R package:
#      https://github.com/r-lib/actions/blob/master/examples/check-standard.yaml
#  - render a README.Rmd file:
#      https://github.com/r-lib/actions/blob/master/examples/render-readme.yaml
#
# I use a "fake" DESCRIPTION file to collect the dependencies, then modify the
# README.Rmd to trigger a build (as a test). Otherwise, the build is scheduled
# to run at 11h15 Iowa time (expressed here as UTC, so will have to be
# adjusted twice a year).
#

on:
  push:
    paths:
      # use this to test the action
      - README.Rmd

  schedule:
    # run at 16h15 UTC (11h15 Iowa, daylight-saving-time)
    - cron:  '15 16 * * *'
    - cron:  '00 20 * * *' # later in the day, just to be safe

name: Get data

jobs:
  render:
    name: Get data
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Get population file
        run: |
          Rscript -e 'rmarkdown::render("00-county-meta.Rmd")'
          echo
          ls -l -R data/meta

      - name: Get HTML file
        run: |
          Rscript -e 'rmarkdown::render("01-download-iowa-site.Rmd")'
          echo
          ls -l -R data/download-site

      - name: Get NYT county-data
        run: |
          Rscript -e 'rmarkdown::render("02-get-nyt-data.Rmd")'
          echo
          ls -l -R data/nyt

      - name: Scrape county-data
        run: |
          Rscript -e 'rmarkdown::render("03-scrape-html.Rmd")'
          echo
          ls -l -R data/scrape-site

      - name: Merge data
        run: |
          Rscript -e 'rmarkdown::render("04-merge-data.Rmd")'
          echo
          ls -l -R data/merged

      - name: Git commit & push
        run: |
          git add '*.md'
          git add 'data/nyt/nyt-iowa.csv'
          git add 'data/meta/iowa_county_meta.csv'
          git add 'data/download-site/*.html'
          git add 'data/scrape-site/*.csv'
          git add 'data/merged/*.csv'
          git commit -m 'daily run' || echo "No changes to commit"
          git push origin || echo "No changes to commit"

